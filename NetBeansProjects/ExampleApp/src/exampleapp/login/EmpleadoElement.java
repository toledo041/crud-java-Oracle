/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package exampleapp.login;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import java.sql.*;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import static javax.swing.JOptionPane.DEFAULT_OPTION;



public class EmpleadoElement extends javax.swing.JFrame {
    private String accionPanel=null;
    //private int idUpdate = 0;
    private ComplementaryActivityCompanyModel modelo;
    /**
     * Creates new form PrincipalPage
     */
    public EmpleadoElement(String accion) {
        accionPanel = accion;
        initComponents();
        centrarVentanaEnPantalla();
        poblarComboBoxActivity();
        poblarComboBoxComnpany();
        
        if(accionPanel.equals("Crear")){
            this.setTitle("Register new element");
            jButton1.setText("Create");
        }else{
            this.setTitle("Update element");
            jButton1.setText("Update");
        }
        EmpleadoElement.this.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                System.out.println(".windowClosing()");                               
                // Cierra el formulario actual
                EmpleadoElement.this.dispose();
                
                ConsultaEmpleados form = new ConsultaEmpleados();
                form.setVisible(true);
            }
        });
        EmpleadoElement.this.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
               
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jComboBox3 = new javax.swing.JComboBox<>();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setText("Company");

        jButton1.setText("Register");
        jButton1.setName("accionBtn"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Activity");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBox3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addComponent(jButton1)
                .addContainerGap(178, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
      
    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        
    }//GEN-LAST:event_formWindowClosing

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         
        String jdbcUrl = "jdbc:oracle:thin:@localhost:1521:xe"; 
        String username = "system";
        String password = "123456789";
        
        /*if(jComboBox2.getSelectedItem().isEmpty() || jTextField2.getText().isEmpty()  || jTextField3.getText().isEmpty() ){
            JOptionPane.showMessageDialog(this, "Alguno de los campos esta vacío, comprueba los datos", "Mensaje",DEFAULT_OPTION);
            return;//si alguno de los campos esta vació no continuará el registro
        }*/
        String activity = jComboBox2.getSelectedObjects()[0].toString();
        String company =jComboBox3.getSelectedObjects()[0].toString();
        String idActivity = activity.split(":")[0];
        String idCompany =  company.split(":")[0];
        //System.out.println("id1 "+idActivity);
        System.out.println("accion "+accionPanel);
        //return;
        if(accionPanel.equals("Crear")){            

            try {
                Connection connection = DriverManager.getConnection(jdbcUrl, username, password);

                String insertQuery = "INSERT into ComplementaryActivityCompany(idcomplementaryactivity,idcompany,idusercreate,datecreate) values (?, ?, ?, sysdate)";
                PreparedStatement preparedStatement = connection.prepareStatement(insertQuery);
                preparedStatement.setString(1, idActivity);
                preparedStatement.setString(2, idCompany);
                preparedStatement.setString(3, "1");                
                preparedStatement.executeUpdate();

                preparedStatement.close();
                connection.close();
                JOptionPane.showMessageDialog(null, "Successful Registration.", "Info", JOptionPane.INFORMATION_MESSAGE);
            } catch (SQLException e) {
                e.printStackTrace();
            }

        }else{
            if(modelo != null){
                try {
                    Connection connection = DriverManager.getConnection(jdbcUrl, username, password);

                    String updateQuery = "UPDATE ComplementaryActivityCompany SET idcomplementaryactivity = ?, idcompany = ?, idusermodified = ?, datemodified = sysdate WHERE idComplementaryActivityCompany = ?";
                    PreparedStatement preparedStatement = connection.prepareStatement(updateQuery);
                    preparedStatement.setString(1, idActivity);
                    preparedStatement.setString(2, idCompany);
                    preparedStatement.setString(3, "1");                    
                    preparedStatement.setString(4, ""+modelo.getIdComplementaryActivityCompany());
                    preparedStatement.executeUpdate();

                    preparedStatement.close();
                    connection.close();
                    
                    JOptionPane.showMessageDialog(null, "Successful Operation.", "Info", JOptionPane.INFORMATION_MESSAGE);
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
        
        
        this.setVisible(false);
        ConsultaEmpleados consultaEmpleados = new ConsultaEmpleados();
        consultaEmpleados.centrarVentanaEnPantalla();
        consultaEmpleados.llenarTabla();
        consultaEmpleados.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmpleadoElement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmpleadoElement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmpleadoElement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmpleadoElement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new EmpleadoElement().setVisible(true);
            }
        });
    }

    
    private void centrarVentanaEnPantalla() {
        // Obtener el tamaño de la pantalla
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();

        // Calcular la posición para centrar la ventana
        int x = (screenSize.width - getWidth()) / 2;
        int y = (screenSize.height - getHeight()) / 2;

        // Establecer la posición de la ventana
        setLocation(x, y);
        setTitulo();
    }
    
    private void setTitulo(){
    
        if(accionPanel.equals("Crear")){
            this.setTitle("Registrar empleado");
            jButton1.setText("Registrar");
        }else{
            this.setTitle("Modificar empleado");
            jButton1.setText("Actualizar");
        }
    }
    
    //Id para hacer la actualizacion
    /*public void setIdUpdate(int id){
        this.idUpdate = id;
    }*/
    //Modelo con la información del empleado para actualizar
    public void setEmpleadoUpdate(ComplementaryActivityCompanyModel empleadoModel){
        this.modelo = empleadoModel;
        /*jTextField1.setText(modelo.getNombre());
        jTextField2.setText(modelo.getCorreo());
        jTextField3.setText(modelo.getTelefono());*/
    }
    
    private void poblarComboBoxActivity() {
        String url = "jdbc:oracle:thin:@localhost:1521:xe"; 
        String user = "system";
        String password = "123456789";       

        try (Connection connection = DriverManager.getConnection(url, user, password)) {
            String sql = "SELECT idcomplementaryactivity, activityname FROM complementaryactivity";
            try (Statement statement = connection.createStatement();
                 ResultSet resultSet = statement.executeQuery(sql)) {

                List<String> items = new ArrayList<>();

                while (resultSet.next()) {
                    int idComplementaryActivity = resultSet.getInt("idcomplementaryactivity");
                    String activityName = resultSet.getString("activityname");
                    String item = idComplementaryActivity + ": " + activityName;
                    items.add(item);
                }

                // Poblar el JComboBox con los elementos de la lista
                jComboBox2.setModel(new DefaultComboBoxModel<>(items.toArray(new String[0])));

            
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    
    private void poblarComboBoxComnpany() {
        String url = "jdbc:oracle:thin:@localhost:1521:xe"; 
        String user = "system";
        String password = "123456789";       

        try (Connection connection = DriverManager.getConnection(url, user, password)) {
            String sql = "SELECT idcompany,name FROM Company";
            try (Statement statement = connection.createStatement();
                 ResultSet resultSet = statement.executeQuery(sql)) {

                List<String> items = new ArrayList<>();

                while (resultSet.next()) {
                    int idcompany = resultSet.getInt("idcompany");
                    String name = resultSet.getString("name");
                    String item = idcompany + ": " + name;
                    items.add(item);
                }

                // Poblar el JComboBox con los elementos de la lista
                jComboBox3.setModel(new DefaultComboBoxModel<>(items.toArray(new String[0])));

            
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
